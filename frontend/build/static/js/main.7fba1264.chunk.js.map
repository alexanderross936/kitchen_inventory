{"version":3,"sources":["components/Home.js","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/Navigation.js","components/add_ingredient.js","components/ingredients_list.js","components/recipes_list.js","components/add_recipe.js","components/Login.js","components/Register.js","components/Recipe.js","components/sum_ingredients.js","Router.js","components/layout/alert.js","reducers/alert.js","reducers/auth.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","data","React","Component","setAlert","msg","alertType","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","connect","auth","logout","isAuthenticated","loading","authLinks","ButtonGroup","MenuItem","to","style","textDecoration","Button","color","onClick","href","className","guestLinks","Fragment","AppBar","position","Toolbar","Typography","variant","flexGrow","AddIngredient","ingredient","amount","handleChangeIngredient","event","setState","target","value","console","log","handleChangeAmount","handleChangeType","handleSubmit","preventDefault","post","margin","onSubmit","this","name","onChange","IngredientsList","ings","Object","values","romp","ings2","filter","e","_id","Ingredient","map","ins","Amount","Type","floz","cup","tbs","tsp","ml","L","RecipesList","then","props","match","Card","CardHeader","title","Title","CardContent","AddRecipe","ingredients","amounts","types","directions","second","handleChangeTitle","handleChangeIngredients","handleChangeAmounts","handleChangeDirections","handleAddIngredient","ar","obs","login","email","password","config","body","JSON","stringify","errors","response","forEach","error","useState","formData","setFormData","placeholder","minLength","register","password2","Recipe","handleUseRecipe","strIngredients","Ingredients","i","arIngredients","split","arAmounts","Amounts","arTypes","Types","negAmounts","j","ing_add","length","push","dat","alert","params","Directions","SumIngredients","hi","result","fin","reduce","oz","lb","g","n","vol","weight","data2","ing","Router","exact","path","component","Login","Register","Alert","alerts","key","PropTypes","array","isRequired","initialState","getItem","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","useEffect","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7fba1264.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     axios.get('http://localhost:4000/')\r\n    //     .then(res => {\r\n    //   this.setState({\r\n    //     data: res.data\r\n    //   } )\r\n    //   console.log(this.state);\r\n    //       })\r\n      \r\n    //     }\r\n        \r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Hello. Welcome to my App!</p>\r\n                \r\n                \r\n                \r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Home;","import { SET_ALERT, REMOVE_ALERT } from './types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport const setAlert = (msg, alertType) => dispatch => {\r\n    const id = uuidv4();\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\r\n}","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const ADD_RECIPE = 'ADD_RECIPE';","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n    if(token){\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User\r\n\r\nexport const loadUser = () => async dispatch => {\r\n   if(localStorage.token) {\r\n       setAuthToken(localStorage.token)\r\n   }\r\n\r\n   try {\r\n       const res = await axios.get('http://localhost:4000/api/user');\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n   } catch(err){\r\n    dispatch({\r\n        type: AUTH_ERROR\r\n    })\r\n   }\r\n}\r\n\r\n// Register a user\r\n\r\nexport const register = ({\r\n    name,\r\n    email,\r\n    password\r\n}) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n        const res = await axios.post('http://localhost:4000/api/register', body, config);\r\n   \r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        console.log(errors)\r\n\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n// Login User\r\n\r\nexport const login = ( email,\r\n    password\r\n) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('http://localhost:4000/api/login', body, config);\r\n   \r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors){\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n// Logout / Clear Profile\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({ type: LOGOUT })\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { AppBar, Toolbar, IconButton, Menu, ButtonGroup, MenuItem, MenuList, Typography, Button } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom';\r\nimport Router from '../Router';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../actions/auth';\r\n\r\n// import LoggedIn from './LoggedIn';\r\n// Import { Link } here //\r\n\r\nconst Navigation = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n        \r\n    const authLinks = \r\n        <Fragment>\r\n            <ButtonGroup>\r\n                <MenuItem>\r\n            <Link to=\"/sum\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Ingredients List</Button></Link>\r\n                </MenuItem>\r\n                <MenuItem>\r\n            <Link to=\"/recipes_list\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Recipes List</Button></Link>\r\n                </MenuItem>\r\n                </ButtonGroup>\r\n                <MenuItem>\r\n            <Link to=\"/add_recipe\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Add Recipe</Button></Link>\r\n                </MenuItem>\r\n                <MenuItem>\r\n            <Link to=\"/add_ingredients\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Add Ingredients</Button></Link>\r\n                </MenuItem>\r\n                <MenuItem>\r\n            <a onClick={logout} href='#!'>\r\n                <span className=\"hide-sm\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Logout</Button></span></a>\r\n                </MenuItem>\r\n                </Fragment>\r\n\r\n        const guestLinks = (\r\n            <Fragment>\r\n            {/* // <ul className = \"nav-list\"> */}\r\n            <MenuItem>\r\n            <Link to=\"/login\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Login</Button></Link>\r\n            </MenuItem>\r\n            <MenuItem>\r\n            <Link to=\"/register\" style= {{ textDecoration: 'none' }}><Button color=\"white\">Register</Button></Link>\r\n            </MenuItem>\r\n            {/* </ul> */}\r\n            </Fragment>\r\n\r\n        )\r\n        return (\r\n            <React.Fragment>\r\n<AppBar position=\"relative\">\r\n            <Toolbar>\r\n                <Typography variant=\"title\" color=\"inherit\" style={{ flexGrow: \"1\" }}>\r\n                   Kitchen Inventory\r\n                </Typography>\r\n            \r\n                {/* <ul className=\"nav-list\">\r\n                    <li className=\"nav-list-item\">\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li> */}\r\n                       {!loading && (<Fragment>\r\n                           {isAuthenticated ? authLinks : guestLinks}\r\n                       </Fragment>)}\r\n                {/* </ul> */}\r\n              \r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n            </React.Fragment>\r\n\r\n    )\r\n        \r\n    }\r\n\r\n// Navigation.propTypes = {\r\n//     logout: PropTypes.func.isRequired,\r\n//     auth: PropTypes.func.isRequired\r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(Navigation);","import React from 'react';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { Input } from '@material-ui/core';\r\nimport { FormHelperText } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nclass AddIngredient extends React.Component {\r\n\r\n    state = {\r\n        ingredient: '',\r\n        type: '',\r\n        amount: ''\r\n    }\r\n\r\n    handleChangeIngredient = (event) => {\r\n        this.setState({\r\n            ingredient: event.target.value\r\n        })\r\n        console.log(this.state.ingredient)\r\n    }\r\n\r\n    handleChangeAmount = (event) => {\r\n        this.setState({\r\n            amount: event.target.value\r\n        })\r\n        console.log(this.state.amount)\r\n    }\r\n\r\n    handleChangeType = (event) => {\r\n        this.setState({\r\n            type: event.target.value\r\n        })\r\n        console.log(this.state.type)\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        let ingredient = {\r\n            ingredient: this.state.ingredient,\r\n            type: this.state.type,\r\n            amount: this.state.amount\r\n        }\r\n\r\n        axios.post('http://localhost:4000/add_ingredient', ingredient)\r\n        this.setState({\r\n            ingredient: '',\r\n            type: '',\r\n            amount: ''\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin: '90px' }}>\r\n                            <form\r\n                            // method=\"POST\" action='http://localhost:4000/add_recipe' \r\n                            onSubmit={this.handleSubmit}\r\n                            >\r\n                                <h3>Ingredient</h3>\r\n            <input id=\"ingredient\" name=\"ingredient\" type=\"text\" value={this.state.ingredient} onChange={this.handleChangeIngredient} />\r\n            <br></br>\r\n            <h3>Amount</h3>\r\n            <input id=\"amount\" name=\"amount\" type=\"text\" value={this.state.amount} onChange={this.handleChangeAmount} />\r\n            <br></br>\r\n            <h3>Measurement Type:</h3>\r\n            <br></br>\r\n            <select id=\"types\" name=\"types\" value={this.state.value} onChange={this.handleChangeType} >\r\n            <option value=\"oz\">oz</option>\r\n            <option value=\"tsp\">tsp</option>\r\n            <option value=\"floz\">floz</option>\r\n            <option value=\"L\">L</option>\r\n            <option value=\"ml\">ml</option>\r\n            <option value=\"lb\">lb</option>\r\n            <option value=\"g\">g</option>\r\n            <option value=\"cup\">cup</option>\r\n            <option value=\"tbs\">tbs</option>\r\n            </select>\r\n            <br></br>\r\n            <br></br>\r\n            <input type='submit' value=\"Submit Ingredient\"/>\r\n          </form>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AddIngredient;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass IngredientsList extends React.Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     axios.get('http://localhost:4000/api/')\r\n    //     .then(res => {\r\n    //   this.setState({\r\n    //     data: res.data\r\n    //   } )\r\n\r\n    //       })\r\n\r\n    //     }\r\n        \r\n\r\n\r\n    render() {\r\n     //   console.log(req.params.id)\r\n        console.log(this.state.data)\r\n        console.log(typeof this.state.data)\r\n        var ings = this.state.data;\r\n\r\n        console.log(Object.values(ings))\r\n        var romp = Object.values(ings)\r\n        var ings2 = romp.filter(function(e){\r\n            return e._id.Ingredient != ''\r\n         });\r\n         console.log(ings2)\r\n        var data =\r\n        romp.map((ins) => (\r\n<p>\r\n\r\n   <h3>ID: {ins._id}</h3>\r\n   <h3>Ingredient: {ins.Ingredient}</h3>\r\n   <h3>Amount: {ins.Amount}</h3>\r\n   <h3>Type: {ins.Type}</h3>\r\n   <h3>FLOZ: {ins.floz}</h3>\r\n   <h3>Cup: {ins.cup}</h3>\r\n   <h3>tbs: {ins.tbs}</h3>\r\n   <h3>tsp: {ins.tsp}</h3>\r\n   <h3>mL: {ins.ml}</h3>\r\n   <h3>L: {ins.L}</h3>\r\n\r\n</p>\r\n\r\n\r\n)) \r\n        return (\r\n            <p>\r\n            {data}</p>\r\n        )\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport default IngredientsList;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\nimport { CardHeader, CardContent, Card, Button } from '@material-ui/core';\r\n\r\n\r\nclass RecipesList extends React.Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:4000/api/recipes')\r\n        .then(res => {\r\n      this.setState({\r\n        data: res.data\r\n      } )\r\n\r\n          })\r\n\r\n        }\r\n        \r\n\r\n\r\n    render() {\r\n     //   console.log(req.params.id)\r\n        console.log(this.state.data)\r\n        console.log(this.props.match)\r\n        console.log(typeof this.state.data)\r\n        var ings = this.state.data\r\n        let none = 'You have no recipes';\r\n        console.log(Object.values(ings))\r\n        var romp = Object.values(ings)\r\n        var data =\r\n        romp.map((ins) => (\r\n            <p>\r\n                <Card>\r\n                    <CardHeader title={ins.Title} />\r\n               {/* <h3>ID: {ins._id}</h3> */}\r\n               <CardContent>\r\n               <Link to={`/recipe/${ins._id}`}><Button style= {{ textDecoration: 'none' }} variant='contained'>See more Details</Button></Link>\r\n               {/* <h3>Ingredients: {ins.Ingredients}</h3>\r\n               <h3>Directions: {ins.Directions}</h3> */}\r\n                              </CardContent>\r\n            </Card>\r\n            </p>\r\n            \r\n            \r\n            )) \r\n        return (\r\n            <p>\r\n            {data}</p>\r\n        )\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport default RecipesList;","import React from 'react';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { Input } from '@material-ui/core';\r\nimport { FormHelperText } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nclass AddRecipe extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        ingredients: '',\r\n        amounts: '',\r\n        types: '',\r\n        directions: ''\r\n    }\r\n\r\n    second = {\r\n        title: '',\r\n        ingredients: '',\r\n        amounts: '',\r\n        types: '',\r\n        directions: ''\r\n    }\r\n\r\n    handleChangeTitle = (event) => {\r\n        this.setState({\r\n            title: event.target.value}, function(){\r\n            console.log(this.state.title)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleChangeIngredients = (event) => {\r\n        this.setState({\r\n            ingredients: event.target.value}, function(){\r\n                console.log(this.state.ingredients);\r\n        })\r\n    }\r\n\r\n    handleChangeAmounts = (event) => {\r\n        this.setState({\r\n            amounts: event.target.value}, function(){\r\n                console.log(this.state.amounts);\r\n        })\r\n    }\r\n\r\n    handleChangeType = (event) => {\r\n        this.setState({\r\n            types: event.target.value}, function(){\r\n                console.log(this.state.types);\r\n        })\r\n    }\r\n    handleChangeDirections = (event) => {\r\n        this.setState({\r\n            directions: event.target.value}, function(){\r\n                console.log(this.state.directions);\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleAddIngredient = (event) => {\r\n        this.second.ingredients += this.state.ingredients + ', '\r\n        console.log(this.second.title)\r\n        console.log(this.second.ingredients)\r\n        this.second.amounts += this.state.amounts + ', '\r\n        console.log(this.second.amounts)\r\n        this.second.types += this.state.types + ', '\r\n        console.log(this.second.types)\r\n        this.setState({\r\n            ingredients: '',\r\n            amounts: '',\r\n            types: '',\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        let post = {\r\n            title: this.state.title,\r\n            ingredients: this.second.ingredients,\r\n            amounts: this.second.amounts,\r\n            types: this.second.types,\r\n            directions: this.state.directions\r\n        }\r\n        console.log(post)\r\n        axios.post('http://localhost:4000/add_recipe', post)\r\n        let prevState = this.state\r\n        this.setState({\r\n            title: '',\r\n            ingredients: '',\r\n            amounts: '',\r\n            types: '',\r\n            directions: ''\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n             \r\n\r\n        let ar = [this.second]\r\n        let data =                 <table>\r\n           { ar.map(obs => {\r\n               return(\r\n                <tr>\r\n                <td><b>Ingredients:</b><p>{obs.ingredients}</p></td>\r\n                <td><b>Amount</b><p>{obs.amounts}</p></td>\r\n                <td><b>Measurement Type</b><p>{obs.types}</p></td>\r\n               </tr> \r\n               )\r\n\r\n           })}\r\n\r\n    </table>\r\n\r\n        return (\r\n            <div>\r\n \r\n\r\n            <input id=\"title\" name=\"title\" type=\"text\" \r\n            value={this.state.title} \r\n            onChange={this.handleChangeTitle} />\r\n            <br></br>\r\n            <h3>Recipe</h3>\r\n                <p>{this.state.title}</p>\r\n                <h3>Ingredients and Measurement</h3>\r\n                    <p>{data}</p>\r\n                <h3>Directions</h3>\r\n                <p>{this.state.directions}</p>\r\n                            {/* <form\r\n                            // method=\"POST\" action='http://localhost:4000/add_recipe' \r\n                            onSubmit={this.handleSubmit}\r\n                            > */}\r\n\r\n            Ingredients:\r\n            <input id=\"ingredients\" name=\"ingredients\" type=\"text\" value={this.state.ingredients} onChange={this.handleChangeIngredients} />\r\n            <br></br>\r\n            Amount:\r\n            <input id=\"amounts\" name=\"amounts\" type=\"text\" value={this.state.amounts} onChange={this.handleChangeAmounts} />\r\n            <br></br>\r\n            Measurement Type:\r\n            <select id=\"types\" name=\"types\" value={this.state.value} onChange={this.handleChangeType} >\r\n            <option value=\"oz\">oz</option>\r\n            <option value=\"tsp\">tsp</option>\r\n            <option value=\"floz\">floz</option>\r\n            <option value=\"L\">L</option>\r\n            <option value=\"ml\">ml</option>\r\n            <option value=\"lb\">lb</option>\r\n            <option value=\"g\">g</option>\r\n            <option value=\"cup\">cup</option>\r\n            <option value=\"tbs\">tbs</option>\r\n            </select>\r\n            <br></br>\r\n            <button onClick={this.handleAddIngredient}>Add Ingredient</button>\r\n            <br></br>\r\n            Directions:\r\n            <input id=\"directions\" name=\"directions\" type=\"text\" \r\n            // value={this.state.directions} \r\n            onChange={this.handleChangeDirections} />\r\n            <br></br>\r\n            <button onClick={this.handleSubmit}>Sub</button>\r\n          {/* </form> */}\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AddRecipe;","import React, { useState, formData, setFormData } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Redirect} from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { PromiseProvider } from 'mongoose';\r\nimport { setAlert } from '../actions/alert';\r\nimport { register } from '../actions/auth';\r\nimport { login } from '../actions/auth';\r\n// let formData = new FormData(); \r\n\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n\r\nconst { email, password } = formData;\r\n\r\nconst onChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n}\r\nconst onSubmit = async e => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n}\r\n    \r\n// Redirect if logged in\r\n\r\nif(isAuthenticated){\r\n    return <Redirect to=\"/Home\" />\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        <h1>Sign In</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <input type='submit' value='Login'\r\n            />\r\n        </form>\r\n        </div>\r\n)\r\n};\r\n\r\n// Login.propTypes = {\r\n//     Login: PropTypes.func.isRequired,\r\n//     isAuthenticated: PropTypes.bool\r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, \r\n    { login })(Login);","// import React, { useState, formData, setFormData } from 'react';\r\n// import axios from 'axios';\r\n// import { Link, Redirect} from 'react-router';\r\n// import { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types'\r\n// import { PromiseProvider } from 'mongoose';\r\n// import { setAlert } from '../actions/alert';\r\n// import { register } from '../actions/auth';\r\n// let formData = new FormData(); \r\n\r\nimport React, { useState, formData, setFormData } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Redirect} from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { PromiseProvider } from 'mongoose';\r\nimport { setAlert } from '../actions/alert';\r\nimport { register } from '../actions/auth';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n\r\nconst { name, email, password, password2 } = formData;\r\n\r\nconst onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\nconst onSubmit = async e => {\r\n    e.preventDefault();\r\n    if(password !== password2){\r\n        setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n        register({ name, email, password });\r\n    }\r\n}\r\n    \r\nif(isAuthenticated) {\r\n    return <Redirect to=\"/Home\" />\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        <h1>Sign Up</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Confirm password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            \r\n            <input type='submit' value='Register'\r\n            />\r\n        </form>\r\n</div>\r\n)\r\n};\r\n\r\n// Register.propTypes = {\r\n//     setAlert: PropTypes.func.isRequired,\r\n//     register: PropTypes.func.isRequired,\r\n//     isAuthenticated: PropTypes.bool\r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, \r\n    { setAlert, register })(Register)","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom'\r\nimport { CardHeader, CardContent, Card, Button } from '@material-ui/core';\r\n\r\nclass Recipe extends React.Component {\r\n\r\n    // console.log(grep)\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    handleUseRecipe = () => {\r\n\r\n        let strIngredients = this.state.data.Ingredients;\r\n        console.log(strIngredients)\r\n        let arIngredients = strIngredients.split(\", \");\r\n        let strAmounts = this.state.data.Amounts;\r\n        let arAmounts = strAmounts.split(\", \");\r\n        let strTypes = this.state.data.Types;\r\n        let arTypes = strTypes.split(\", \");\r\n        let negAmounts = arAmounts.map(amount => {\r\n            return amount*(-1)\r\n        })\r\n        console.log(arIngredients);\r\n        console.log(arAmounts);\r\n        console.log(arTypes);\r\n        console.log(typeof negAmounts)\r\n        let i;\r\n        let ing_add = [];\r\n        for(i = 0; i < arIngredients.length - 1; i++){\r\n            ing_add.push( {\r\n                Ingredient: arIngredients[i],\r\n                Type: arTypes[i],\r\n                Amount: negAmounts[i]\r\n            })\r\n        }\r\n        console.log(ing_add);\r\n        let j;\r\n        for(j = 0; j < ing_add.length; j++){\r\n            let dat = ing_add[j]\r\n            axios.post('http://localhost:4000/api/use_recipe', dat)\r\n            console.log(dat)\r\n            alert('Recipe ingredients have been subtracted from ingredient list')\r\n        }\r\n\r\n        \r\n\r\n        // For Each\r\n    }\r\n\r\n    componentDidMount(){\r\n        const id = this.props.match.params.id\r\n        axios.get(`http://localhost:4000/recipe/${id}`)\r\n        .then(res => {\r\n      this.setState({\r\n        data: res.data\r\n      } )\r\n      console.log(this.state.data)\r\n          })\r\n\r\n    }\r\nrender(){\r\n\r\n    let data =\r\n        <p>\r\n            <Card>\r\n                <CardHeader title={this.state.Title} />\r\n           {/* <h3>ID: {ins._id}</h3> */}\r\n           <CardContent>\r\n               <h3>Ingredients: {this.state.data.Ingredients}</h3>\r\n                <h3>Amounts: {this.state.data.Amounts}</h3>\r\n                <h3>Measurements: {this.state.data.Types}</h3>\r\n                <h3>Directions: {this.state.data.Directions}</h3>\r\n                 <Button \r\n      onClick={this.handleUseRecipe}\r\n      >Use Recipe</Button>\r\n                          </CardContent>\r\n        </Card>\r\n        </p>;\r\n    \r\n    console.log(this.state.data)\r\n    console.log(this.state.data.Amounts)\r\n    console.log(this.state.data.Ingredients)\r\n    console.log(this.state.data.Types)\r\nreturn (\r\n    <div>\r\n      <span>{data}</span>\r\n\r\n    </div>\r\n   \r\n)\r\n}\r\n    }\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { CardHeader, CardContent, Card, Button } from '@material-ui/core';\r\n\r\n\r\nclass SumIngredients extends React.Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:4000/api/sum')\r\n        .then(res => {\r\n      this.setState({\r\n        data: res.data\r\n      } )\r\n\r\n          })\r\n\r\n        }\r\n        \r\n\r\n\r\n    render() {\r\n     //   console.log(req.params.id)\r\n        console.log(this.state.data)\r\n        console.log(typeof this.state.data)\r\n        var ings = this.state.data\r\n        console.log(Object.values(ings))\r\n        // var vol = ings.map(filter)\r\n\r\n        let hi = Object.values(this.state.data);\r\n        console.log(hi)\r\n// console.log(hi)\r\nlet result = [];\r\nlet fin = hi.reduce(function(res, value){\r\n  if (! res[value.Ingredient]){\r\n    res[value.Ingredient] = {Ingredient: value.Ingredient, floz: 0, tsp: 0,\r\n    tbs: 0, L: 0, ml: 0, cup: 0, oz: 0, lb: 0, g: 0 };\r\n    result.push(res[value.Ingredient])\r\n  }\r\n  res[value.Ingredient].floz += value.floz;\r\n  res[value.Ingredient].tsp += value.tsp;\r\n  res[value.Ingredient].tbs += value.tbs;\r\n  res[value.Ingredient].L += value.L;\r\n  res[value.Ingredient].ml += value.ml;\r\n  res[value.Ingredient].cup += value.cup;\r\n  res[value.Ingredient].oz += value.oz;\r\n  res[value.Ingredient].lb += value.lb;\r\n  res[value.Ingredient].g += value.g\r\n  return res;\r\n}, {});\r\n\r\nconsole.log(fin)\r\n        var romp = Object.values(fin);\r\n        let i;\r\n        let vol = [];\r\n        let weight = [];\r\n        for(i=0; i< romp.length; i++){\r\n            if(romp.floz === 0 && romp.tsp === 0 && romp.tbs === 0 && romp.L === 0 && romp.ml === 0 && romp.cup === 0){\r\n                weight.push(romp[i])\r\n            } else {\r\n                vol.push(romp[i])\r\n            }\r\n        }\r\n        console.log(vol)\r\n        console.log(weight)\r\n        console.log(vol)\r\n        console.log(weight)\r\n        console.log(romp);\r\n        let n;\r\n        let j;\r\n        for(n=0; n < romp.length; n++){\r\n            if(romp[n].j === 0 || romp[n].j === 'NaN'){\r\n                romp[n].j = 'N/A'\r\n            }\r\n        }\r\n        console.log(romp)\r\n        \r\n\r\n        // console.log(func(vol))\r\n        let data2 = romp.map(ing => (\r\n            <Card>\r\n                <h3><CardHeader title={ing.Ingredient} /></h3>\r\n                <CardContent>\r\n            <p>\r\n            <h3>tbs: {ing.tbs}</h3>\r\n            <h3>tsp: {ing.tsp}</h3>\r\n            <h3>floz: {ing.floz}</h3>\r\n            <h3>cup: {ing.cup}</h3>\r\n            <h3>mL: {ing.ml}</h3>\r\n            <h3>L: {ing.L}</h3>\r\n            <h3>oz: {ing.oz}</h3>\r\n            <h3>lb: {ing.lb}</h3>\r\n            <h3>g: {ing.g}</h3>\r\n            </p>\r\n            </CardContent>\r\n            </Card>\r\n        ))\r\n            \r\n        return (\r\n            \r\n <p>{data2}</p>\r\n\r\n    \r\n        )\r\n}\r\n}\r\n\r\nexport default SumIngredients;","/* \r\n    Write code for React Router here\r\nImport the Home and About components from \r\nthe component folder. Assign the default\r\npath \"/\" to the Home component and \"/about\"\r\nto the About component.\r\n\r\nRemember to export the component at the end\r\n*/\r\nimport Home from './components/Home';\r\nimport React from 'react';\r\nimport Navigation from './components/Navigation';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport AddIngredient from './components/add_ingredient';\r\nimport IngredientsList from './components/ingredients_list';\r\nimport RecipesList from './components/recipes_list';\r\nimport AddRecipe from './components/add_recipe';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Recipe from './components/Recipe';\r\nimport SumIngredients from './components/sum_ingredients';\r\n// Write component imports here //\r\n\r\n\r\n\r\n// Start Router function here //\r\nfunction Router (){\r\n    return (\r\n        <BrowserRouter>\r\n        <Navigation />\r\n                            <Switch>\r\n                <Route exact path=\"/\" component = {Home} />\r\n                <Route exact path=\"/add_ingredients\" component = {AddIngredient} />\r\n                <Route exact path=\"/ingredients_list\" component = {IngredientsList} /> \r\n                <Route exact path=\"/recipes_list\" component = {RecipesList} />   \r\n                <Route exact path=\"/add_recipe\" component = {AddRecipe} /> \r\n                <Route exact path=\"/login\" component = {Login} />  \r\n                <Route exact path=\"/register\" component = {Register} /> \r\n                <Route path=\"/recipe/:id\" component = {Recipe} />    \r\n                <Route path=\"/sum\" component = {SumIngredients} />       \r\n        </Switch>\r\n        </BrowserRouter>\r\n\r\n      \r\n    )\r\n}\r\n\r\nexport default Router;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) => {\r\nalerts !== null && \r\nalerts.length > 0 && \r\nalerts.map(alert => (\r\n    <div key={alert.id}>\r\n        { alert.msg }\r\n    </div>\r\n));\r\n}\r\nAlert.PropTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert);","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [\r\n    {\r\n        id: 1,\r\n        msg: 'Please log in',\r\n        alertType: 'success'\r\n}];\r\n\r\nexport default function(state = initialState, action){\r\n    const { type, payload } = action;\r\n\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state, action.payload]\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n        }\r\n}","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT\r\n}   from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    \r\n    \r\n    switch(type){\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n            case REGISTER_FAIL:\r\n            case AUTH_ERROR:\r\n            case LOGIN_FAIL:\r\n            case LOGOUT:\r\n                localStorage.removeItem('token');\r\n                return {\r\n                    ...state,\r\n                    token: null,\r\n                    isAuthenticated: false,\r\n                    loading: false\r\n                }\r\n            default:\r\n                return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nexport default combineReducers({\r\n    alert,\r\n    auth\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React, { Fragment, useEffect } from 'react';\n// import AddRefill from './components/add_refill';\nimport Router from './Router';\n// import Register from './components/register'\n// import LoggedIn from './components/LoggedIn';\n// Redux\nimport Alert from './components/layout/alert';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth'\nimport setAuthToken from './utils/setAuthToken'\n\nif(localStorage.token) {\n  setAuthToken(localStorage.token)\n}\n\n\nfunction App() {\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <Router />\n    </div>\n    </Provider>\n\n  );\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import 'boostrap/dist/css/boostrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport React from 'react';\n// import 'bootstrap/dist/js/bootstrap.bundle.min';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}