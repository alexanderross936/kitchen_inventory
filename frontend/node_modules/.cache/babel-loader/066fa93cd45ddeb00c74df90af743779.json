{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\src\\\\components\\\\Recipe.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n\nconst Recipe = props => {\n  const grep = props.match.params.id; // console.log(grep)\n\n  const [hasError, setErrors] = useState(false);\n  const [recipe, setRecipe] = useState({});\n  useEffect(() => {\n    async function fetchRecipe() {\n      const res = await fetch(`http://localhost:4000/recipe/${grep}`);\n      res.json().then(res => setRecipe(res)).catch(err => setErrors(err));\n\n      const handleUseRecipe = () => {\n        let strIngredients = recipe.Ingredients;\n        let arIngredients = strIngredients.split(\", \");\n        let strAmounts = recipe.Amounts;\n        let arAmounts = strAmounts.split(\", \");\n        let strUnits = recipe.Units;\n        let arUnits = strUnits.split(\", \");\n        console.log(arIngredients);\n        console.log(arAmounts);\n        console.log(arUnits); // For Each\n        // Axios.post('localhost:4000/add_ingredient')\n      };\n    }\n\n    fetchRecipe();\n  }); // console.log(name.Origin)\n  // const name = cars.find(x => x.id == props.match.params.id).Name\n\n  const log = recipe.Ingredients;\n  const log2 = typeof log;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, log, log2, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, JSON.stringify(recipe)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUseRecipe(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Use Recipe\"));\n};\n\nexport default Recipe;","map":{"version":3,"sources":["C:/Users/alexander.ross/Documents/jsdev/kitchen_inventory/frontend/src/components/Recipe.js"],"names":["React","useState","useEffect","Axios","Recipe","props","grep","match","params","id","hasError","setErrors","recipe","setRecipe","fetchRecipe","res","fetch","json","then","catch","err","handleUseRecipe","strIngredients","Ingredients","arIngredients","split","strAmounts","Amounts","arAmounts","strUnits","Units","arUnits","console","log","log2","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAEtB,QAAMC,IAAI,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,EAAhC,CAFsB,CAGtB;;AAEA,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeY,WAAf,GAA6B;AAC3B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,gCAA+BV,IAAK,EAAtC,CAAvB;AACAS,MAAAA,GAAG,CACAE,IADH,GAEGC,IAFH,CAEQH,GAAG,IAAIF,SAAS,CAACE,GAAD,CAFxB,EAGGI,KAHH,CAGSC,GAAG,IAAIT,SAAS,CAACS,GAAD,CAHzB;;AAKE,YAAMC,eAAe,GAAG,MAAM;AAC1B,YAAIC,cAAc,GAAGV,MAAM,CAACW,WAA5B;AACA,YAAIC,aAAa,GAAGF,cAAc,CAACG,KAAf,CAAqB,IAArB,CAApB;AACA,YAAIC,UAAU,GAAGd,MAAM,CAACe,OAAxB;AACA,YAAIC,SAAS,GAAGF,UAAU,CAACD,KAAX,CAAiB,IAAjB,CAAhB;AACA,YAAII,QAAQ,GAAGjB,MAAM,CAACkB,KAAtB;AACA,YAAIC,OAAO,GAAGF,QAAQ,CAACJ,KAAT,CAAe,IAAf,CAAd;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAT0B,CAU1B;AACA;AACH,OAZD;AAaH;;AAEDjB,IAAAA,WAAW;AACd,GAxBQ,CAAT,CARsB,CAmCtB;AACA;;AACA,QAAMmB,GAAG,GAAGrB,MAAM,CAACW,WAAnB;AACA,QAAMW,IAAI,GAAG,OAAOD,GAApB;AAGJ,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,GADL,EAEKC,IAFL,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAI,CAACC,SAAL,CAAexB,MAAf,CAAP,CAHF,eAIE;AAAQ,IAAA,OAAO,EAAES,eAAe,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAFJ;AAWK,CApDL;;AAsDA,eAAejB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst Recipe = (props) => {\r\n\r\n    const grep = props.match.params.id;\r\n    // console.log(grep)\r\n\r\n    const [hasError, setErrors] = useState(false);\r\n    const [recipe, setRecipe] = useState({});\r\n\r\n    useEffect(() => {\r\n        async function fetchRecipe() {\r\n          const res = await fetch(`http://localhost:4000/recipe/${grep}`);\r\n          res\r\n            .json()\r\n            .then(res => setRecipe(res))\r\n            .catch(err => setErrors(err));\r\n\r\n            const handleUseRecipe = () => {\r\n                let strIngredients = recipe.Ingredients;\r\n                let arIngredients = strIngredients.split(\", \");\r\n                let strAmounts = recipe.Amounts;\r\n                let arAmounts = strAmounts.split(\", \");\r\n                let strUnits = recipe.Units;\r\n                let arUnits = strUnits.split(\", \");\r\n                console.log(arIngredients);\r\n                console.log(arAmounts);\r\n                console.log(arUnits);\r\n                // For Each\r\n                // Axios.post('localhost:4000/add_ingredient')\r\n            }\r\n        }\r\n    \r\n        fetchRecipe();\r\n    });\r\n\r\n\r\n    // console.log(name.Origin)\r\n    // const name = cars.find(x => x.id == props.match.params.id).Name\r\n    const log = recipe.Ingredients;\r\n    const log2 = typeof log\r\n\r\n\r\nreturn (\r\n    \r\n    <div>\r\n        {log}\r\n        {log2}\r\n      <span>{JSON.stringify(recipe)}</span>\r\n      <button onClick={handleUseRecipe()}>Use Recipe</button>\r\n    </div>\r\n   \r\n)\r\n\r\n    }\r\n\r\nexport default Recipe"]},"metadata":{},"sourceType":"module"}