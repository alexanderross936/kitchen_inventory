{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\src\\\\components\\\\Register.js\";\n// import React, { useState, formData, setFormData } from 'react';\n// import axios from 'axios';\n// import { Link, Redirect} from 'react-router';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types'\n// import { PromiseProvider } from 'mongoose';\n// import { setAlert } from '../actions/alert';\n// import { register } from '../actions/auth';\n// let formData = new FormData(); \nimport React, { useState, formData, setFormData } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { PromiseProvider } from 'mongoose';\nimport { setAlert } from '../actions/alert';\nimport { register } from '../actions/auth';\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Confirm password\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })));\n}; // Register.propTypes = {\n//     setAlert: PropTypes.func.isRequired,\n//     register: PropTypes.func.isRequired,\n//     isAuthenticated: PropTypes.bool\n// }\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["C:/Users/alexander.ross/Documents/jsdev/kitchen_inventory/frontend/src/components/Register.js"],"names":["React","useState","formData","setFormData","axios","Link","Redirect","connect","PropTypes","PromiseProvider","setAlert","register","Register","isAuthenticated","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["// import React, { useState, formData, setFormData } from 'react';\r\n// import axios from 'axios';\r\n// import { Link, Redirect} from 'react-router';\r\n// import { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types'\r\n// import { PromiseProvider } from 'mongoose';\r\n// import { setAlert } from '../actions/alert';\r\n// import { register } from '../actions/auth';\r\n// let formData = new FormData(); \r\n\r\nimport React, { useState, formData, setFormData } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Redirect} from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { PromiseProvider } from 'mongoose';\r\nimport { setAlert } from '../actions/alert';\r\nimport { register } from '../actions/auth';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n\r\nconst { name, email, password, password2 } = formData;\r\n\r\nconst onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\nconst onSubmit = async e => {\r\n    e.preventDefault();\r\n    if(password !== password2){\r\n        setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n        register({ name, email, password });\r\n    }\r\n}\r\n    \r\nif(isAuthenticated) {\r\n    return <Redirect to=\"/Home\" />\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        <h1>Sign Up</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Confirm password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            \r\n            <input type='submit' value='Register'\r\n            />\r\n        </form>\r\n</div>\r\n)\r\n};\r\n\r\n// Register.propTypes = {\r\n//     setAlert: PropTypes.func.isRequired,\r\n//     register: PropTypes.func.isRequired,\r\n//     isAuthenticated: PropTypes.bool\r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, \r\n    { setAlert, register })(Register)"]},"metadata":{},"sourceType":"module"}