{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { PromiseProvider } from 'mongoose';\nimport { setAlert } from '../actions/alert';\nimport { register } from '../actions/auth';\n\nconst Login = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n};\n\nconst {\n  name,\n  email,\n  password,\n  password2\n} = formData;\n\nconst onChange = e => setFormData({ ...formData,\n  [e.target.name]: e.target.value\n});\n\nconst onSubmit = async e => {\n  e.preventDefault();\n\n  if (password !== password2) {\n    setAlert('Passwords do not match', 'danger');\n  } else {\n    register({\n      name,\n      email,\n      password\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Confirm password\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })));\n};\n\nRegister.PropTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["C:/Users/alexander.ross/Documents/jsdev/kitchen_inventory/frontend/src/components/Login.js"],"names":["React","axios","connect","PropTypes","PromiseProvider","setAlert","register","Login","formData","setFormData","useState","email","password","name","password2","onChange","e","target","value","onSubmit","preventDefault","Register","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { PromiseProvider } from 'mongoose';\r\nimport { setAlert } from '../actions/alert';\r\nimport { register } from '../actions/auth';\r\n\r\nconst Login = () => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n}\r\n\r\nconst { name, email, password, password2 } = formData;\r\n\r\nconst onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\nconst onSubmit = async e => {\r\n    e.preventDefault();\r\n    if(password !== password2){\r\n        setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n        register({ name, email, password });\r\n    }\r\n    \r\n\r\n\r\nreturn (\r\n    <Fragment>\r\n        <h1>Sign Up</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Confirm password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <input type='submit' value='Register'\r\n            />\r\n        </form>\r\n\r\n    </Fragment>\r\n)\r\n};\r\n\r\nRegister.PropTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(null, \r\n    { setAlert, register })(Register)"]},"metadata":{},"sourceType":"module"}