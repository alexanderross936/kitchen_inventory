{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\src\\\\components\\\\add_recipe.js\";\nimport React from 'react';\nimport { FormControl } from '@material-ui/core';\nimport { InputLabel } from '@material-ui/core';\nimport { Input } from '@material-ui/core';\nimport { FormHelperText } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport axios from 'axios';\n\nclass AddRecipe extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      ingredients: '',\n      amounts: '',\n      types: '',\n      directions: ''\n    };\n    this.second = {\n      title: '',\n      ingredients: '',\n      amounts: '',\n      types: '',\n      directions: ''\n    };\n\n    this.handleChangeTitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n      console.log(this.state.title);\n    };\n\n    this.handleChangeIngredients = event => {\n      this.setState({\n        ingredients: event.target.value\n      });\n      console.log(this.state.ingredients);\n    };\n\n    this.handleChangeAmounts = event => {\n      this.setState({\n        amounts: event.target.value\n      });\n      console.log(this.state.amounts);\n    };\n\n    this.handleChangeType = event => {\n      this.setState({\n        types: event.target.value\n      });\n      console.log(this.state.types);\n    };\n\n    this.handleChangeDirections = event => {\n      this.setState({\n        directions: event.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.handleAddIngredient = event => {\n      this.second.ingredients += ', ' + this.state.ingredients;\n      console.log(this.second.title);\n      console.log(this.second.ingredients);\n      this.second.amounts += ', ' + this.state.amounts;\n      console.log(this.second.amounts);\n      this.second.types += ', ' + this.state.types;\n      console.log(this.second.types);\n      this.setState({\n        title: '',\n        ingredients: [],\n        amounts: [],\n        types: [],\n        directions: ''\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let post = {\n        title: this.state.title,\n        ingredients: this.state.ingredients,\n        amounts: this.state.amounts,\n        types: this.state.types,\n        directions: this.state.directions\n      };\n      axios.post('http://localhost:4000/add_recipe', post);\n      this.setState({\n        title: '',\n        ingredients: '',\n        amounts: '',\n        types: '',\n        directions: ''\n      });\n    };\n  }\n\n  render() {\n    let ar = [this.second];\n    let data = /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 36\n      }\n    }, ar.map(obs => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, \"Ingredients:\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 40\n        }\n      }, obs.ingredients.substring(2))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 34\n        }\n      }, obs.ingredients.substring(2))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, \"Measurement Type\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 44\n        }\n      }, obs.ingredients.substring(2))));\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Recipe\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, this.state.title), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Ingredients and Measurement\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, data), /*#__PURE__*/React.createElement(\"form\", {\n      // method=\"POST\" action='http://localhost:4000/add_recipe' \n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, \"Recipe:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      value: this.state.title,\n      onChange: this.handleChangeTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), \"Ingredients:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"ingredients\",\n      name: \"ingredients\",\n      type: \"text\",\n      value: this.state.ingredients,\n      onChange: this.handleChangeIngredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }), \"Amount:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"amounts\",\n      name: \"amounts\",\n      type: \"text\",\n      value: this.state.amounts,\n      onChange: this.handleChangeAmounts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }), \"Measurement Type:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"types\",\n      name: \"types\",\n      type: \"text\",\n      value: this.state.types,\n      onChange: this.handleChangeType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleAddIngredient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"Add Ingredient\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }), \"Directions:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"directions\",\n      name: \"directions\",\n      type: \"text\",\n      value: this.state.directions,\n      onChange: this.handleChangeDirections,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit Recipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default AddRecipe;","map":{"version":3,"sources":["C:/Users/alexander.ross/Documents/jsdev/kitchen_inventory/frontend/src/components/add_recipe.js"],"names":["React","FormControl","InputLabel","Input","FormHelperText","Button","axios","AddRecipe","Component","state","title","ingredients","amounts","types","directions","second","handleChangeTitle","event","setState","target","value","console","log","handleChangeIngredients","handleChangeAmounts","handleChangeType","handleChangeDirections","handleAddIngredient","handleSubmit","preventDefault","post","render","ar","data","map","obs","substring"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormControl } from '@material-ui/core';\r\nimport { InputLabel } from '@material-ui/core';\r\nimport { Input } from '@material-ui/core';\r\nimport { FormHelperText } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\nclass AddRecipe extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        ingredients: '',\r\n        amounts: '',\r\n        types: '',\r\n        directions: ''\r\n    }\r\n\r\n    second = {\r\n        title: '',\r\n        ingredients: '',\r\n        amounts: '',\r\n        types: '',\r\n        directions: ''\r\n    }\r\n\r\n    handleChangeTitle = (event) => {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n        console.log(this.state.title)\r\n    }\r\n\r\n    handleChangeIngredients = (event) => {\r\n        this.setState({\r\n            ingredients: event.target.value\r\n        })\r\n        console.log(this.state.ingredients)\r\n    }\r\n\r\n    handleChangeAmounts = (event) => {\r\n        this.setState({\r\n            amounts: event.target.value\r\n        })\r\n        console.log(this.state.amounts)\r\n    }\r\n\r\n    handleChangeType = (event) => {\r\n        this.setState({\r\n            types: event.target.value\r\n        })\r\n        console.log(this.state.types)\r\n    }\r\n\r\n    handleChangeDirections = (event) => {\r\n        this.setState({\r\n            directions: event.target.value\r\n        })\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleAddIngredient = (event) => {\r\n        this.second.ingredients += ', ' + this.state.ingredients\r\n        console.log(this.second.title)\r\n        console.log(this.second.ingredients)\r\n        this.second.amounts += ', ' + this.state.amounts\r\n        console.log(this.second.amounts)\r\n        this.second.types += ', ' + this.state.types\r\n        console.log(this.second.types)\r\n        this.setState({\r\n            title: '',\r\n            ingredients: [],\r\n            amounts: [],\r\n            types: [],\r\n            directions: ''\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        let post = {\r\n            title: this.state.title,\r\n            ingredients: this.state.ingredients,\r\n            amounts: this.state.amounts,\r\n            types: this.state.types,\r\n            directions: this.state.directions\r\n        }\r\n\r\n        axios.post('http://localhost:4000/add_recipe', post)\r\n        this.setState({\r\n            title: '',\r\n            ingredients: '',\r\n            amounts: '',\r\n            types: '',\r\n            directions: ''\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        let ar = [this.second]\r\n        let data =                 <table>\r\n           { ar.map(obs => {\r\n               return(\r\n                <tr>\r\n                <td><b>Ingredients:</b><p>{obs.ingredients.substring(2)}</p></td>\r\n                <td><b>Amount</b><p>{obs.ingredients.substring(2)}</p></td>\r\n                <td><b>Measurement Type</b><p>{obs.ingredients.substring(2)}</p></td>\r\n               </tr> \r\n               )\r\n\r\n           })}\r\n\r\n    </table>\r\n\r\n        return (\r\n            <div>\r\n                <h3>Recipe</h3>\r\n                <p>{this.state.title}</p>\r\n                <h3>Ingredients and Measurement</h3>\r\n                    <p>{data}</p>\r\n                            <form\r\n                            // method=\"POST\" action='http://localhost:4000/add_recipe' \r\n                            onSubmit={this.handleSubmit}\r\n                            >\r\n            Recipe:\r\n            <input id=\"title\" name=\"title\" type=\"text\" value={this.state.title} onChange={this.handleChangeTitle} />\r\n            <br></br>\r\n            Ingredients:\r\n            <input id=\"ingredients\" name=\"ingredients\" type=\"text\" value={this.state.ingredients} onChange={this.handleChangeIngredients} />\r\n            <br></br>\r\n            Amount:\r\n            <input id=\"amounts\" name=\"amounts\" type=\"text\" value={this.state.amounts} onChange={this.handleChangeAmounts} />\r\n            <br></br>\r\n            Measurement Type:\r\n            <input id=\"types\" name=\"types\" type=\"text\" value={this.state.types} onChange={this.handleChangeType} />\r\n            <br></br>\r\n            <button onClick={this.handleAddIngredient}>Add Ingredient</button>\r\n            <br></br>\r\n            Directions:\r\n            <input id=\"directions\" name=\"directions\" type=\"text\" value={this.state.directions} onChange={this.handleChangeDirections} />\r\n            <br></br>\r\n            <input type='submit' value=\"Submit Recipe\"/>\r\n          </form>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AddRecipe;"]},"metadata":{},"sourceType":"module"}