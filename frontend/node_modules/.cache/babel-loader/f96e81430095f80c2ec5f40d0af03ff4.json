{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";// import React, { useState, formData, setFormData } from 'react';\n// import axios from 'axios';\n// import { Link, Redirect} from 'react-router';\n// import { connect } from 'react-redux';\n// import PropTypes from 'prop-types'\n// import { PromiseProvider } from 'mongoose';\n// import { setAlert } from '../actions/alert';\n// import { register } from '../actions/auth';\n// let formData = new FormData(); \nimport React,{useState,formData,setFormData}from'react';import axios from'axios';import{Link,Redirect}from'react-router';import{connect}from'react-redux';import{PromiseProvider}from'mongoose';import{setAlert}from'../actions/alert';import{register}from'../actions/auth';var Register=function Register(_ref){var setAlert=_ref.setAlert,register=_ref.register,isAuthenticated=_ref.isAuthenticated;var _useState=useState({name:'',email:'',password:'',password2:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var name=formData.name,email=formData.email,password=formData.password,password2=formData.password2;var _onChange=function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var _onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(password!==password2){setAlert('Passwords do not match','danger');}else{register({name:name,email:email,password:password});}case 2:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();if(isAuthenticated){return/*#__PURE__*/React.createElement(Redirect,{to:\"/Home\"});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Sign Up\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:function onSubmit(e){return _onSubmit(e);}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:function onChange(e){return _onChange(e);},minLength:\"6\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Email\",name:\"email\",value:email,onChange:function onChange(e){return _onChange(e);},minLength:\"6\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Password\",name:\"password\",value:password,onChange:function onChange(e){return _onChange(e);},minLength:\"6\"})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Confirm password\",name:\"password2\",value:password2,onChange:function onChange(e){return _onChange(e);},minLength:\"6\"})),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Register\"})));};// Register.propTypes = {\n//     setAlert: PropTypes.func.isRequired,\n//     register: PropTypes.func.isRequired,\n//     isAuthenticated: PropTypes.bool\n// }\nvar mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};export default connect(mapStateToProps,{setAlert:setAlert,register:register})(Register);","map":{"version":3,"sources":["C:/Users/alexander.ross/Documents/jsdev/kitchen_inventory/frontend/src/components/Register.js"],"names":["React","useState","formData","setFormData","axios","Link","Redirect","connect","PromiseProvider","setAlert","register","Register","isAuthenticated","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["// import React, { useState, formData, setFormData } from 'react';\r\n// import axios from 'axios';\r\n// import { Link, Redirect} from 'react-router';\r\n// import { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types'\r\n// import { PromiseProvider } from 'mongoose';\r\n// import { setAlert } from '../actions/alert';\r\n// import { register } from '../actions/auth';\r\n// let formData = new FormData(); \r\n\r\nimport React, { useState, formData, setFormData } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Redirect} from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { PromiseProvider } from 'mongoose';\r\nimport { setAlert } from '../actions/alert';\r\nimport { register } from '../actions/auth';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n\r\nconst { name, email, password, password2 } = formData;\r\n\r\nconst onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\nconst onSubmit = async e => {\r\n    e.preventDefault();\r\n    if(password !== password2){\r\n        setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n        register({ name, email, password });\r\n    }\r\n}\r\n    \r\nif(isAuthenticated) {\r\n    return <Redirect to=\"/Home\" />\r\n}\r\n\r\nreturn (\r\n    <div>\r\n        <h1>Sign Up</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Email'\r\n            name='email'\r\n            value={email}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Confirm password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            \r\n            <input type='submit' value='Register'\r\n            />\r\n        </form>\r\n</div>\r\n)\r\n};\r\n\r\n// Register.propTypes = {\r\n//     setAlert: PropTypes.func.isRequired,\r\n//     register: PropTypes.func.isRequired,\r\n//     isAuthenticated: PropTypes.bool\r\n// }\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, \r\n    { setAlert, register })(Register)"]},"metadata":{},"sourceType":"module"}