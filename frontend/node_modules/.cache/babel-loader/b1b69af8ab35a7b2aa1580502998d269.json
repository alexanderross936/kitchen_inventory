{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\src\\\\components\\\\Register.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { PromiseProvider } from 'mongoose';\nimport { setAlert } from '../actions/alert';\nimport { register } from '../actions/auth';\nlet formData = new FormData();\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  const [formData, setFormData] = React.useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n};\n\nconst {\n  name,\n  email,\n  password,\n  password2\n} = formData;\n\nconst onChange = e => setFormData({ ...formData,\n  [e.target.name]: e.target.value\n});\n\nconst onSubmit = async e => {\n  e.preventDefault();\n\n  if (password !== password2) {\n    setAlert('Passwords do not match', 'danger');\n  } else {\n    register({\n      name,\n      email,\n      password\n    });\n  }\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Confirm password\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  })));\n};\n\nRegister.PropTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["C:/Users/alexander.ross/Documents/jsdev/kitchen_inventory/frontend/src/components/Register.js"],"names":["React","axios","Link","Redirect","connect","PropTypes","PromiseProvider","setAlert","register","formData","FormData","Register","isAuthenticated","setFormData","useState","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA8B,cAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,IAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEJ,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBI,EAAAA;AAAtB,CAAD,KAA6C;AAC1D,QAAM,CAACH,QAAD,EAAWI,WAAX,IAA0Bb,KAAK,CAACc,QAAN,CAAe;AAC3CC,IAAAA,IAAI,EAAE,EADqC;AAE3CC,IAAAA,KAAK,EAAE,EAFoC;AAG3CC,IAAAA,QAAQ,EAAE,EAHiC;AAI3CC,IAAAA,SAAS,EAAE;AAJgC,GAAf,CAAhC;AAMH,CAPD;;AASA,MAAM;AAAEH,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,QAAf;AAAyBC,EAAAA;AAAzB,IAAuCT,QAA7C;;AAEA,MAAMU,QAAQ,GAAGC,CAAC,IACdP,WAAW,CAAC,EAAE,GAAGJ,QAAL;AAAe,GAACW,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASC;AAAzC,CAAD,CADf;;AAGA,MAAMC,QAAQ,GAAG,MAAMH,CAAN,IAAW;AACxBA,EAAAA,CAAC,CAACI,cAAF;;AACA,MAAGP,QAAQ,KAAKC,SAAhB,EAA0B;AACtBX,IAAAA,QAAQ,CAAC,wBAAD,EAA2B,QAA3B,CAAR;AACH,GAFD,MAEO;AACHC,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAD,CAAR;AACH;;AAEL,MAAGL,eAAH,EAAoB;AAChB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,IAAA,QAAQ,EAAEQ,CAAC,IAAIG,QAAQ,CAACH,CAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,IAAI,EAAG,MAAd;AACA,IAAA,WAAW,EAAC,MADZ;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,KAAK,EAAEL,IAHP;AAIA,IAAA,QAAQ,EAAEK,CAAC,IAAID,QAAQ,CAACC,CAAD,CAJvB;AAKA,IAAA,SAAS,EAAC,GALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,IAAI,EAAG,MAAd;AACA,IAAA,WAAW,EAAC,UADZ;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,KAAK,EAAEH,QAHP;AAIA,IAAA,QAAQ,EAAEG,CAAC,IAAID,QAAQ,CAACC,CAAD,CAJvB;AAKA,IAAA,SAAS,EAAC,GALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAVJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,IAAI,EAAG,MAAd;AACA,IAAA,WAAW,EAAC,kBADZ;AAEA,IAAA,IAAI,EAAC,WAFL;AAGA,IAAA,KAAK,EAAEF,SAHP;AAIA,IAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAD,CAJvB;AAKA,IAAA,SAAS,EAAC,GALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAnBJ,eA4BI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,CAFJ,CADJ;AAqCC,CAjDD;;AAmDAT,QAAQ,CAACN,SAAT,GAAqB;AACjBE,EAAAA,QAAQ,EAAEF,SAAS,CAACoB,IAAV,CAAeC,UADR;AAEjBlB,EAAAA,QAAQ,EAAEH,SAAS,CAACoB,IAAV,CAAeC,UAFR;AAGjBd,EAAAA,eAAe,EAAEP,SAAS,CAACsB;AAHV,CAArB;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BjB,EAAAA,eAAe,EAAEiB,KAAK,CAACC,IAAN,CAAWlB;AADE,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACwB,eAAD,EAClB;AAAErB,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CADkB,CAAP,CACaG,QADb,CAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Redirect} from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { PromiseProvider } from 'mongoose';\r\nimport { setAlert } from '../actions/alert';\r\nimport { register } from '../actions/auth';\r\nlet formData = new FormData(); \r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = React.useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n}\r\n\r\nconst { name, email, password, password2 } = formData;\r\n\r\nconst onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\nconst onSubmit = async e => {\r\n    e.preventDefault();\r\n    if(password !== password2){\r\n        setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n        register({ name, email, password });\r\n    }\r\n    \r\nif(isAuthenticated) {\r\n    return <Redirect to=\"/Home\" />\r\n}\r\n\r\nreturn (\r\n    <Fragment>\r\n        <h1>Sign Up</h1>\r\n        <form onSubmit={e => onSubmit(e)}>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <div>\r\n            <input type = 'text'\r\n            placeholder='Confirm password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={e => onChange(e)}\r\n            minLength='6'\r\n            />\r\n            </div>\r\n            <input type='submit' value='Register'\r\n            />\r\n        </form>\r\n\r\n    </Fragment>\r\n)\r\n};\r\n\r\nRegister.PropTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, \r\n    { setAlert, register })(Register)"]},"metadata":{},"sourceType":"module"}