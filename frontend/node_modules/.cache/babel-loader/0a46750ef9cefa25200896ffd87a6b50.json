{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\src\\\\components\\\\sum_ingredients.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass SumIngredients extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/sum').then(res => {\n      this.setState({\n        data: res.data\n      });\n    });\n  }\n\n  render() {\n    //   console.log(req.params.id)\n    console.log(this.state.data);\n    console.log(typeof this.state.data);\n    var ings = this.state.data;\n    console.log(Object.values(ings)); // var vol = ings.map(filter)\n\n    var romp = Object.values(ings);\n\n    var vol = () => {\n      if (romp.Type === 'tsp' || romp.Type === 'tbs' || romp.Type === 'floz' || romp.Type === 'cup' || romp.Type === 'ml' || romp.Type === 'L') {\n        romp.map(ins => {\n          /*#__PURE__*/\n          React.createElement(\"tr\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 1\n            }\n          }, ins._id), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 4\n            }\n          }, ins.Ingredient), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 4\n            }\n          }, ins.Amount), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 4\n            }\n          }, ins.Type), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 4\n            }\n          }, ins.floz), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 4\n            }\n          }, ins.cup), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 4\n            }\n          }, ins.tbs), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 4\n            }\n          }, ins.tsp), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 4\n            }\n          }, ins.ml), /*#__PURE__*/React.createElement(\"td\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 4\n            }\n          }, ins.L));\n        });\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }\n    }, \"Ingredient:\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }\n    }, \"Amount:\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }\n    }, \"Type:\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 4\n      }\n    }, \"FLOZ:\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }\n    }, \"Cup:\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, \"tbs:\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }\n    }, \"tsp:\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }\n    }, \"mL:\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }\n    }, \"L: \")));\n  }\n\n}\n\nexport default SumIngredients;","map":{"version":3,"sources":["C:/Users/alexander.ross/Documents/jsdev/kitchen_inventory/frontend/src/components/sum_ingredients.js"],"names":["React","axios","SumIngredients","Component","state","data","componentDidMount","get","then","res","setState","render","console","log","ings","Object","values","romp","vol","Type","map","ins","_id","Ingredient","Amount","floz","cup","tbs","tsp","ml","L"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nclass SumIngredients extends React.Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:4000/sum')\r\n        .then(res => {\r\n      this.setState({\r\n        data: res.data\r\n      } )\r\n\r\n          })\r\n\r\n        }\r\n        \r\n\r\n\r\n    render() {\r\n     //   console.log(req.params.id)\r\n        console.log(this.state.data)\r\n        console.log(typeof this.state.data)\r\n        var ings = this.state.data\r\n        console.log(Object.values(ings))\r\n        // var vol = ings.map(filter)\r\n        var romp = Object.values(ings)\r\n        var vol = () => {\r\n            if(romp.Type === 'tsp' || romp.Type === 'tbs' || romp.Type === 'floz' || romp.Type === 'cup'\r\n            || romp.Type === 'ml' || romp.Type === 'L'){\r\n                romp.map((ins) => {\r\n                    <tr>\r\n<td>{ins._id}</td>\r\n   <td>{ins.Ingredient}</td>\r\n   <td>{ins.Amount}</td>\r\n   <td>{ins.Type}</td>\r\n   <td>{ins.floz}</td>\r\n   <td>{ins.cup}</td>\r\n   <td>{ins.tbs}</td>\r\n   <td>{ins.tsp}</td>\r\n   <td>{ins.ml}</td>\r\n   <td>{ins.L}</td>\r\n</tr>\r\n                } \r\n                )\r\n            }\r\n        }\r\n            \r\n        return (\r\n            \r\n                <table>\r\n    <tr>\r\n   <th>Ingredient:</th>\r\n   <th>Amount:</th>\r\n   <th>Type:</th>\r\n   <th>FLOZ:</th>\r\n   <th>Cup:</th>\r\n   <th>tbs:</th>\r\n   <th>tsp:</th>\r\n   <th>mL:</th>\r\n   <th>L: </th>\r\n    </tr>\r\n            {/* {data} */}\r\n            </table>\r\n        )\r\n    }\r\n}\r\n    \r\n\r\n\r\nexport default SumIngredients;"]},"metadata":{},"sourceType":"module"}