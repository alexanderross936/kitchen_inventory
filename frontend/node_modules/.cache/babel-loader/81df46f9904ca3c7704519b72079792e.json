{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexander.ross\\\\Documents\\\\jsdev\\\\kitchen_inventory\\\\frontend\\\\src\\\\components\\\\sum_ingredients.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass SumIngredients extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/sum').then(res => {\n      this.setState({\n        data: res.data\n      });\n    });\n  }\n\n  render() {\n    //   console.log(req.params.id)\n    console.log(this.state.data);\n    console.log(typeof this.state.data);\n    var ings = this.state.data;\n    console.log(Object.values(ings)); // var vol = ings.map(filter)\n\n    var romp = Object.values(ings);\n    console.log(romp); // console.log(func(vol))\n\n    var data = romp.map(ins => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, \"Recipe: \", ins.Title), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    }, \"ID: \", ins._id), /*#__PURE__*/React.createElement(Link, {\n      to: `/recipe/${ins._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    }, \"See more Details\")));\n    let data2 = romp.map(ing => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Ingredient: \", ing._id.Ingredient), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Type: \", ing.Type), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Amount: \", ing.Amount), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"tbs: \", ing.tbs), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"tsp: \", ing.tsp), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"floz: \", ing.floz), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"cup: \", ing.cup), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"mL: \", ing.ml), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"L: \", ing.L)));\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 2\n      }\n    }, data2);\n  }\n\n}\n\nexport default SumIngredients;","map":{"version":3,"sources":["C:/Users/alexander.ross/Documents/jsdev/kitchen_inventory/frontend/src/components/sum_ingredients.js"],"names":["React","axios","Link","SumIngredients","Component","state","data","componentDidMount","get","then","res","setState","render","console","log","ings","Object","values","romp","map","ins","Title","_id","data2","ing","Ingredient","Type","Amount","tbs","tsp","floz","cup","ml","L"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAGA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAEzCC,KAFyC,GAEjC;AACJC,MAAAA,IAAI,EAAE;AADF,KAFiC;AAAA;;AAMzCC,EAAAA,iBAAiB,GAAE;AACfN,IAAAA,KAAK,CAACO,GAAN,CAAU,2BAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACf,WAAKC,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAEI,GAAG,CAACJ;AADE,OAAd;AAIK,KANH;AAQC;;AAILM,EAAAA,MAAM,GAAG;AACR;AACGC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,IAAvB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKT,KAAL,CAAWC,IAA9B;AACA,QAAIS,IAAI,GAAG,KAAKV,KAAL,CAAWC,IAAtB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAM,CAACC,MAAP,CAAcF,IAAd,CAAZ,EALK,CAML;;AACA,QAAIG,IAAI,GAAGF,MAAM,CAACC,MAAP,CAAcF,IAAd,CAAX;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EARK,CAWL;;AACA,QAAIZ,IAAI,GACRY,IAAI,CAACC,GAAL,CAAUC,GAAD,iBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaA,GAAG,CAACC,KAAjB,CAFH,eAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASD,GAAG,CAACE,GAAb,CAHH,eAIG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAUF,GAAG,CAACE,GAAI,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJH,CADJ,CADA;AAYA,QAAIC,KAAK,GAAGL,IAAI,CAACC,GAAL,CAASK,GAAG,iBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiBA,GAAG,CAACF,GAAJ,CAAQG,UAAzB,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWD,GAAG,CAACE,IAAf,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaF,GAAG,CAACG,MAAjB,CAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUH,GAAG,CAACI,GAAd,CAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUJ,GAAG,CAACK,GAAd,CALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWL,GAAG,CAACM,IAAf,CANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUN,GAAG,CAACO,GAAd,CAPA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASP,GAAG,CAACQ,EAAb,CARA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQR,GAAG,CAACS,CAAZ,CATA,CADQ,CAAZ;AAeA,wBAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIV,KAAJ,CAFO;AAMP;;AAhE4C;;AAmE7C,eAAepB,cAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass SumIngredients extends React.Component {\r\n\r\n    state = {\r\n        data: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:4000/sum')\r\n        .then(res => {\r\n      this.setState({\r\n        data: res.data\r\n      } )\r\n\r\n          })\r\n\r\n        }\r\n        \r\n\r\n\r\n    render() {\r\n     //   console.log(req.params.id)\r\n        console.log(this.state.data)\r\n        console.log(typeof this.state.data)\r\n        var ings = this.state.data\r\n        console.log(Object.values(ings))\r\n        // var vol = ings.map(filter)\r\n        var romp = Object.values(ings)\r\n        console.log(romp);\r\n        \r\n\r\n        // console.log(func(vol))\r\n        var data =\r\n        romp.map((ins) => (\r\n            <p>\r\n        \r\n               <h3>Recipe: {ins.Title}</h3>\r\n               <h3>ID: {ins._id}</h3>\r\n               <Link to={`/recipe/${ins._id}`}>See more Details</Link>\r\n            \r\n            </p>\r\n                 \r\n                )\r\n        )\r\n        let data2 = romp.map(ing => (\r\n            <p>\r\n            <h3>Ingredient: {ing._id.Ingredient}</h3>\r\n            <h3>Type: {ing.Type}</h3>\r\n            <h3>Amount: {ing.Amount}</h3>\r\n            <h3>tbs: {ing.tbs}</h3>\r\n            <h3>tsp: {ing.tsp}</h3>\r\n            <h3>floz: {ing.floz}</h3>\r\n            <h3>cup: {ing.cup}</h3>\r\n            <h3>mL: {ing.ml}</h3>\r\n            <h3>L: {ing.L}</h3>\r\n            </p>\r\n\r\n        ))\r\n            \r\n        return (\r\n            \r\n <p>{data2}</p>\r\n\r\n    \r\n        )\r\n}\r\n}\r\n\r\nexport default SumIngredients;"]},"metadata":{},"sourceType":"module"}